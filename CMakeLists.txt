CMAKE_MINIMUM_REQUIRED (VERSION 2.6)
PROJECT (esxx Java)
ENABLE_TESTING ()

SET (CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules")

SET (CPACK_SET_DESTDIR ON)
SET (CPACK_GENERATOR RPM)
SET (CPACK_PACKAGE_NAME ${PROJECT_NAME})
SET (CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_CURRENT_SOURCE_DIR}/README")
SET (CPACK_PACKAGE_DESCRIPTION_SUMMARY "ESXX - The friendly ECMAscript/XML Application Server")
SET (CPACK_PACKAGE_VENDOR "Divine Software")
SET (CPACK_PACKAGE_CONTACT "Martin Blom")
SET (CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/LICENSE")
SET (CPACK_PACKAGE_VERSION_MAJOR "1")
SET (CPACK_PACKAGE_VERSION_MINOR "0")
SET (CPACK_PACKAGE_VERSION_PATCH "0")
SET (CPACK_PACKAGE_INSTALL_DIRECTORY "esxx-${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}")

SET (CPACK_RPM_PACKAGE_ARCHITECTURE "noarch")
SET (CPACK_RPM_PACKAGE_RELEASE "1")
SET (CPACK_RPM_PACKAGE_LICENSE "GPLv3")
SET (CPACK_RPM_PACKAGE_GROUP "System Environment/Daemons")
SET (CPACK_RPM_USER_BINARY_SPECFILE "${CMAKE_CURRENT_SOURCE_DIR}/esxx.spec.in")

INCLUDE (Prefix)
INCLUDE (CPack)

FIND_PACKAGE (Java REQUIRED)
FIND_PROGRAM (ANT ant)

# Build using ANT
ADD_CUSTOM_TARGET(dist COMMAND 
		      ${ANT} -buildfile ${CMAKE_CURRENT_SOURCE_DIR}/build.xml 
		             -Dbuild.dir=${CMAKE_CURRENT_BINARY_DIR}/build
		             -Ddist.dir=${CMAKE_CURRENT_BINARY_DIR}/dist
			     clean dist)

FILE(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/dist/docs)

# Create init scripts and shell wrappers
CONFIGURE_FILE(package/initscript-esxx.in 
               ${CMAKE_CURRENT_BINARY_DIR}/package/@PROJECT_NAME@ @ONLY)
CONFIGURE_FILE(package/initscript-binfmt.in 
               ${CMAKE_CURRENT_BINARY_DIR}/package/@PROJECT_NAME@-binfmt @ONLY)
CONFIGURE_FILE(package/javawrapper.in ${CMAKE_CURRENT_BINARY_DIR}/@PROJECT_NAME@ @ONLY)
CONFIGURE_FILE(package/jswrapper.in ${CMAKE_CURRENT_BINARY_DIR}/@PROJECT_NAME@-js @ONLY)
CONFIGURE_FILE(package/config.in ${CMAKE_CURRENT_BINARY_DIR}/package/@PROJECT_NAME@.conf @ONLY)

# Install binaries
INSTALL (PROGRAMS ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}-js
         DESTINATION ${BIN_INSTALL_DIR})

INSTALL (PROGRAMS ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}
		  ${CMAKE_CURRENT_BINARY_DIR}/dist/esxx.jar 
         DESTINATION ${SBIN_INSTALL_DIR})

# Install init scripts
INSTALL (PROGRAMS ${CMAKE_CURRENT_BINARY_DIR}/package/@PROJECT_NAME@
		  ${CMAKE_CURRENT_BINARY_DIR}/package/@PROJECT_NAME@-binfmt
         DESTINATION ${SYSCONF_INSTALL_DIR}/init.d)
INSTALL (FILES ${CMAKE_CURRENT_BINARY_DIR}/package/@PROJECT_NAME@.conf
	 DESTINATION ${SYSCONF_INSTALL_DIR}/${CONFDIR}
	 RENAME @PROJECT_NAME@)

# Install utility files
INSTALL (DIRECTORY share/
	 DESTINATION ${SHARE_INSTALL_PREFIX}/${PROJECT_NAME}/
	 PATTERN ".svn" EXCLUDE)

# Install docs
#INSTALL (DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/dist/docs
#	 DESTINATION ${SHARE_INSTALL_PREFIX}/doc/${PROJECT_NAME}/)

# Install examples
INSTALL (DIRECTORY examples
	 DESTINATION ${SHARE_INSTALL_PREFIX}/doc/${PROJECT_NAME}/
	 PATTERN .svn EXCLUDE)

INSTALL (FILES LICENSE.APL2
	       LICENSE.BSD
	       LICENSE.GPL-3
	       LICENSE.HtmlCleaner
	       LICENSE.JavaMail
	       LICENSE.MPL-1.0
	       LICENSE.MPL-1.1
	       README
	 DESTINATION ${SHARE_INSTALL_PREFIX}/doc/${PROJECT_NAME}/)
