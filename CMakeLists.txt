PROJECT (esxx Java)
ENABLE_TESTING()

SET (CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules")

INCLUDE (DpkgDeb)
INCLUDE (Rpmbuild)

SET (PACKAGE_NAME ${PROJECT_NAME})
SET (PACKAGE_VERSION "20080604")
SET (PACKAGE_RELEASE 1)
SET (PACKAGE_MAINTAINER_NAME "Martin Blom")
SET (PACKAGE_MAINTAINER_EMAIL "martin@blom.org")
SET (PACKAGE_DESCRIPTION "ESXX - The friendly ECMAscript/XML Application ServerESXX")
SET (PACKAGE_DESCRIPTION_SUMMARY "ESXX")
SET (PACKAGE_DEPENDS ${esxx_dependencies})

IF (DPKG_FOUND)
  SET (PACKAGE_SECTION "checkinstall")
  SET (PACKAGE_PRIORITY "extra")
  SET (DEBIAN_ARCHITECTURE "all")
  ADD_DEBIAN_PACKAGE (${PROJECT_NAME})
  ADD_DEPENDENCIES(${PROJECT_NAME}_deb dist)
  SET (CONFDIR "default")
ENDIF (DPKG_FOUND)

IF (RPMBUILD_FOUND)
  SET (PACKAGE_GROUP "System Environment/Daemons")
  SET (PACKAGE_LICENSE "Proprietary")
  SET (PACKAGE_ARCH "noarch")
  ADD_RPM (${PROJECT_NAME})
  ADD_DEPENDENCIES(${PROJECT_NAME}_rpm dist)
  SET (CONFDIR "sysconfig")
ENDIF (RPMBUILD_FOUND)

INCLUDE (Prefix)
FIND_PACKAGE (Java REQUIRED)
FIND_PROGRAM (ANT ant)

# Build using ANT
ADD_CUSTOM_TARGET(dist COMMAND 
		      ${ANT} -buildfile ${CMAKE_CURRENT_SOURCE_DIR}/build.xml 
		             -Dbuild.dir=${CMAKE_CURRENT_BINARY_DIR}/build
		             -Ddist.dir=${CMAKE_CURRENT_BINARY_DIR}/dist
			     clean dist)

FILE(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/dist/docs)

# Create init scripts and shell wrappers
CONFIGURE_FILE(package/initscript-esxx.in 
               ${CMAKE_CURRENT_BINARY_DIR}/package/@PROJECT_NAME@ @ONLY)
CONFIGURE_FILE(package/initscript-binfmt.in 
               ${CMAKE_CURRENT_BINARY_DIR}/package/@PROJECT_NAME@-binfmt @ONLY)
CONFIGURE_FILE(package/javawrapper.in ${CMAKE_CURRENT_BINARY_DIR}/@PROJECT_NAME@ @ONLY)
CONFIGURE_FILE(package/jswrapper.in ${CMAKE_CURRENT_BINARY_DIR}/@PROJECT_NAME@-js @ONLY)
CONFIGURE_FILE(package/config.in ${CMAKE_CURRENT_BINARY_DIR}/package/@PROJECT_NAME@.conf @ONLY)

# Install binaries
INSTALL (PROGRAMS ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}-js
         DESTINATION ${BIN_INSTALL_DIR})

INSTALL (PROGRAMS ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}
		  ${CMAKE_CURRENT_BINARY_DIR}/dist/esxx.jar 
         DESTINATION ${SBIN_INSTALL_DIR})

# Install init scripts
INSTALL (PROGRAMS ${CMAKE_CURRENT_BINARY_DIR}/package/@PROJECT_NAME@
		  ${CMAKE_CURRENT_BINARY_DIR}/package/@PROJECT_NAME@-binfmt
         DESTINATION ${SYSCONF_INSTALL_DIR}/init.d)
INSTALL (FILES ${CMAKE_CURRENT_BINARY_DIR}/package/@PROJECT_NAME@.conf
	 DESTINATION ${SYSCONF_INSTALL_DIR}/${CONFDIR}
	 RENAME @PROJECT_NAME@)

# Install utility files
INSTALL (DIRECTORY share/
	 DESTINATION ${SHARE_INSTALL_PREFIX}/${PROJECT_NAME}/
	 PATTERN ".svn" EXCLUDE)

# Install docs
#INSTALL (DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/dist/docs
#	 DESTINATION ${SHARE_INSTALL_PREFIX}/doc/${PROJECT_NAME}/)

# Install examples
INSTALL (DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/dist/examples
	 DESTINATION ${SHARE_INSTALL_PREFIX}/doc/${PROJECT_NAME}/)

INSTALL (FILES ${CMAKE_CURRENT_BINARY_DIR}/dist/LICENSE.APL2
	       ${CMAKE_CURRENT_BINARY_DIR}/dist/LICENSE.BSD
	       ${CMAKE_CURRENT_BINARY_DIR}/dist/LICENSE.GPL-3
	       ${CMAKE_CURRENT_BINARY_DIR}/dist/LICENSE.HtmlCleaner
	       ${CMAKE_CURRENT_BINARY_DIR}/dist/LICENSE.JavaMail
	       ${CMAKE_CURRENT_BINARY_DIR}/dist/LICENSE.MPL-1.0
	       ${CMAKE_CURRENT_BINARY_DIR}/dist/LICENSE.MPL-1.1
	       ${CMAKE_CURRENT_BINARY_DIR}/dist/README
	 DESTINATION ${SHARE_INSTALL_PREFIX}/doc/${PROJECT_NAME}/)
