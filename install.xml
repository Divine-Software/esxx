<?xml version="1.0"?>

<project>
  <!-- Install dirs -->
  <property name="DESTDIR" value="" />
  <property file="install.properties" />

  <filterset id="installdirs">
    <filter token="prefix"         value="${prefix}" />
    <filter token="exec_prefix"    value="${exec_prefix}" />
    <filter token="bindir"         value="${bindir}" />
    <filter token="sbindir"        value="${sbindir}" />
    <filter token="libexecdir"     value="${libexecdir}" />
    <filter token="datarootdir"    value="${datarootdir}" />
    <filter token="datadir"        value="${datadir}" />
    <filter token="sysconfdir"     value="${sysconfdir}" />
    <filter token="confdir"        value="${confdir}" />
    <filter token="sharedstatedir" value="${sharedstatedir}" />
    <filter token="localstatedir"  value="${localstatedir}" />
    <filter token="includedir"     value="${includedir}" />
    <filter token="docdir"         value="${docdir}" />
    <filter token="infodir"        value="${infodir}" />
    <filter token="htmldir"        value="${htmldir}" />
    <filter token="dvidir"         value="${dvidir}" />
    <filter token="pdfdir"         value="${pdfdir}" />
    <filter token="psdir"          value="${psdir}" />
    <filter token="libdir"         value="${libdir}" />
    <filter token="lispdir"        value="${lispdir}" />
    <filter token="localedir"      value="${localedir}" />
    <filter token="mandir"         value="${mandir}" />
  </filterset>

  <!-- OS conditions -->
  <condition property="isLinux">
    <os name="Linux"/>
  </condition>

  <condition property="isMacOSX">
    <and>
      <os family="mac" />
      <os family="unix" />
    </and>
  </condition>
  
  <condition property="isSunOS">
    <os name="SunOS"/>
  </condition>

  <condition property="isUNIX">
    <os family="unix" />
  </condition>

  <condition property="isWindows">
    <os family="windows" />
  </condition>

  <target name="generate-build-files" description="Generate build files">
    <copy todir="${build.dir}" overwrite="true">
      <fileset dir="." includes="*.in debian/*.in"/>
      <globmapper from="*.in" to="*" />
      <filterset refid="installdirs" />
      <filterset filtersfile="build.properties" />
    </copy>
  	
    <!-- LICENSE.rtf -->
    <copy file="LICENSE.txt" tofile="${build.dir}/LICENSE.rtf" overwrite="true">
      <filterchain>
      	<tokenfilter>
          <filetokenizer/>
            <!--replaceregex pattern="^" replace="{\\\\rtf1\\\\ansi\\\\deff0{\\\\fonttbl{\\\\f0\\\\fnil\\\\fcharset0 Courier New;}}\\\\viewkind4\\\\uc1\\\\pard\\\\lang1031\\\\f0\\\\fs15" /-->
            <replaceregex pattern="^" replace="{\\\\rtf1\\\\ansi\\\\deff0{\\\\fonttbl{\\\\f0\\\\fnil\\\\fcharset0 MS Mincho;}}\\\\viewkind4\\\\uc1\\\\pard\\\\lang1031\\\\f0\\\\fs16" />

      	</tokenfilter>
      	<tokenfilter>
          <linetokenizer/>
            <replaceregex pattern="$" replace="\\\\par" />
      	</tokenfilter>
      	<tokenfilter>
          <filetokenizer/>
          <replaceregex pattern="$" replace="}" />
      	</tokenfilter>
      </filterchain>
    </copy>

  </target>

  <target name="generate-install-files" depends="init" description="Generate install files">
    <copy todir="${build.dir}/package">
      <fileset dir="package" excludes="*.in" />
    </copy>

    <copy todir="${build.dir}/package">
      <fileset dir="package" />
      <globmapper from="*.in" to="*" />
      <filterset refid="installdirs" />
      <filterset filtersfile="build.properties"/>
    </copy>
  </target>

  <target name="install" description="Install files"
	  depends="generate-install-files, jar, 
		   install-windows, install-unix, 
		   install-mac, install-sunos, install-linux">
    <!-- Modules and libs -->
    <copy todir="${DESTDIR}${datadir}">
      <fileset dir="share"/>
    </copy>

    <!-- Examples -->
    <copy todir="${DESTDIR}${docdir}">
      <fileset dir="." includes="examples/**"/>
    </copy>

    <!-- Fixup permissions in examples -->
    <chmod dir="${DESTDIR}${docdir}/examples" includes="**/*.js" perm="ugo+rx" />
  </target>

  <target name="install-windows" description="Install Windows-specific files" if="isWindows">
    <!-- Fat executable JAR -->
    <copy todir="${DESTDIR}${sbindir}">
      <fileset file="${build.dir}/${ant.project.name}.jar" />
    </copy>

    <!-- Wrappers -->
    <copy todir="${DESTDIR}${exec_prefix}">
      <fileset dir="${build.dir}/package" includes="*.bat"/>
    </copy>
    <copy file="${build.dir}/package/winwrapper.exe" tofile="${DESTDIR}${exec_prefix}/esxx.exe"/>
    <copy file="${build.dir}/package/winwrapper.exe" tofile="${DESTDIR}${exec_prefix}/esxx-js.exe"/>

  	<!-- Documentation, with .txt extensions -->
    <copy todir="${DESTDIR}${docdir}">
      <fileset dir="." includes="CHANGES.txt LICENSE.* README NOTICE" />
      <regexpmapper from="^((.*)\.txt|(.*))$$" to="\2\3.txt"/>
    </copy>
  </target>

  <target name="install-unix" description="Install UNIX-specific files" if="isUNIX">
    <!-- Fat executable JAR -->
    <copy file="${build.dir}/${ant.project.name}.jar" todir="${DESTDIR}${sbindir}" />

    <copy file="${build.dir}/package/javawrapper" tofile="${DESTDIR}${sbindir}/${ant.project.name}"/>
    <chmod file="${DESTDIR}${sbindir}/${ant.project.name}" perm="755" />

    <copy file="${build.dir}/package/jswrapper" tofile="${DESTDIR}${bindir}/${ant.project.name}-js"/>
    <chmod file="${DESTDIR}${bindir}/${ant.project.name}-js" perm="755" />

    <!-- Config files -->
    <copy todir="${DESTDIR}${confdir}">
      <fileset dir="${build.dir}/package/" includes="config, config-*"/>
      <globmapper from="config*" to="${ant.project.name}*"/>
    </copy>
  	
    <!-- Documentation -->
    <copy todir="${DESTDIR}${docdir}">
      <fileset dir="." includes="CHANGES.txt LICENSE.* README NOTICE" />
    </copy>
  </target>

  <target name="install-mac" description="Install MacOSX-specific files" if="isMacOSX">
    <!-- launchd config file -->
    <copy file="${build.dir}/package/org.esxx.ESXX.plist" todir="${DESTDIR}/Library/LaunchDaemons"/>
  </target>

  <target name="install-sunos" description="Install SunOS-specific files" if="isSunOS">
    <!-- svc method -->
    <copy file="${build.dir}/package/svc-method" tofile="${DESTDIR}/lib/svc/method/${ant.project.name}"/>
    <chmod file="${DESTDIR}/lib/svc/method/${ant.project.name}" perm="755" />

    <!-- svc manifest -->
    <copy file="${build.dir}/package/svc-manifest.xml" tofile="${DESTDIR}/var/svc/manifest/network/${ant.project.name}.xml"/>
  </target>

  <target name="install-linux" description="Install Linux-specific files" if="isLinux">
    <!-- Init script helper -->
    <copy file="${build.dir}/package/initscript" tofile="${DESTDIR}${sbindir}/${ant.project.name}.init"/>
    <!-- Init scripts -->
    <copy todir="${DESTDIR}${sysconfdir}/init.d">
      <fileset dir="${build.dir}/package/" includes="initscript-*"/>
      <globmapper from="initscript*" to="${ant.project.name}*"/>
    </copy>
    <chmod dir="${DESTDIR}${sysconfdir}/init.d" includes="*" perm="755"/>
  </target>
</project>
